
openapi: "3.0.2"

info:
  title: NIEM Model API
  description: |

    This project defines a mock static REST API to provide easy access to release and IEPD metadata and components.  This is to support the development of the future NIEM tool strategy and tool prototyping in a simple manner.

    Content will be provided in a separate GitHub project as JSON files using GitHub Pages.  This setup will look and behave similar to a regular REST API, with a few exceptions...

    - Endpoints will end with `.json`, corresponding to the hosted JSON files.
    - No server-side processing is available, so only full data files can be returned (no filtered or paginated results, no query strings on URLs).

    The API currently supports a subset of fields for models and packages only.

    Note that this API is under development and is subject to drastic changes.

  version: "0.1"
  contact:
    url: https://github.com/cdmgtri/niem-model-api-specification/

servers:
  - url: https://cdmgtri.github.io/niem-model-api

tags:
  - name: models
  - name: packages
  - name: namespaces
  - name: properties
  - name: types
  - name: codes

paths:


  /models.json:
    get:
      summary: Find models
      operationId: getModels
      tags:
        - models
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/modelResponseType"
              example:
                value:
                  - $ref: ./examples/niem/modelResponse.json#/modelResponse
                  - $ref: ./examples/iepd/modelResponse.json#/modelResponse
        default:
          $ref: "#/components/responses/NotFound"

  /models/{modelID}.json:
    get:
      summary: Find model by ID
      operationId: getModelByID
      tags:
        - models
      parameters:
        - $ref: "#/components/parameters/modelID"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/modelResponseType"
              examples:
                NIEM:
                  value:
                    $ref: examples/niem/modelResponse.json#/modelResponse
                "Sample IEPD":
                  value:
                    $ref: examples/iepd/modelResponse.json#/modelResponse
        "404":
          $ref: "#/components/responses/NotFound"

  /models/{modelID}/packages.json:
    get:
      summary: Find packages
      operationId: getPackages
      tags:
        - packages
      parameters:
        - $ref: "#/components/parameters/modelID"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/packageResponseType"
              example:
                value:
                  -  $ref: ./examples/iepd/packageResponse1.json#/packageResponse
                  -  $ref: ./examples/iepd/packageResponse2.json#/packageResponse
        default:
          $ref: "#/components/responses/NotFound"

  /packages/{packageID}.json:
    get:
      summary: Find package by ID
      operationId: getPackageByID
      tags:
        - packages
      parameters:
        - $ref: "#/components/parameters/packageID"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/packageResponseType"
              examples:
                NIEM:
                  value:
                    $ref: examples/niem/packageResponse.json#/packageResponse
                "Sample IEPD":
                  value:
                    $ref: examples/iepd/packageResponse2.json#/packageResponse
        "404":
          $ref: "#/components/responses/NotFound"

components:

  schemas:

    modelResponseType:
      type: object
      $ref: ./schemas/api-schema.json#/definitions/ModelResponseType

    packageResponseType:
      type: object
      $ref: ./schemas/api-schema.json#/definitions/PackageResponseType

    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message

  parameters:
    modelID:
      name: modelID
      in: path
      required: true
      description: The id of the model to find.
      schema:
        type: string
      example: hvpd-arrest-rpt
    packageID:
      name: packageID
      in: path
      required: true
      description: The id of the package to find.
      schema:
        type: string
      example: hvpd-arrest-rpt-1.0

  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 404
            message: "The resource was not found"
